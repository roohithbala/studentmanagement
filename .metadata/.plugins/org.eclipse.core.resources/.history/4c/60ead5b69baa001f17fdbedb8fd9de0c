// Load the students and display them
window.onload = function() {
    fetch('http://localhost:8080/api/students')
    .then(response => response.json())
    .then(data => {
        const studentList = document.getElementById('student-list').getElementsByTagName('tbody')[0];
        data.forEach(student => {
            const row = studentList.insertRow();
            row.insertCell(0).textContent = student.rollNumber;
            row.insertCell(1).textContent = student.name;
            row.insertCell(2).textContent = student.email;
            row.insertCell(3).textContent = student.department;
            
            // Create delete button
            const deleteButtonCell = row.insertCell(4);
            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.classList.add('delete-btn');
            deleteButton.setAttribute('data-id', student.id); // Set student ID to the button
            deleteButtonCell.appendChild(deleteButton);

            // Add event listener to the delete button
            deleteButton.addEventListener('click', function() {
                deleteStudent(student.id, row); // Call the delete function
            });
        });
    })
    .catch(error => {
       
    });
};

// Function to delete a student
function deleteStudent(studentId, row) {
    if (confirm("Are you sure you want to delete this student?")) {
        fetch(`http://localhost:8080/api/students/${studentId}`, {
            method: 'DELETE',
        })
        .then(response => {
            if (response.ok) {
                row.remove(); // Remove the row from the table
                alert('Student deleted successfully!');
            } else {
                alert('Failed to delete student. Please try again.');
            }
        })
        .catch(error => {
            alert('Failed to delete student. Please try again.');
        });
    }
}
